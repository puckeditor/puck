.BlockStyleSelect-input {
  background: var(--puck-color-white);
  border-width: 1px;
  border-style: solid;
  border-color: var(--puck-color-grey-09);
  border-radius: 4px;
  box-sizing: border-box;
  font-family: inherit;
  font-size: 12px;
  padding: 4px 8px;
  padding-right: 20px;
  transition: border-color 50ms ease-in;
}

select.BlockStyleSelect-input {
  appearance: none; /* Safari */
  background: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='100' fill='%23c3c3c3'><polygon points='0,0 100,0 50,50'/></svg>")
    no-repeat;
  background-size: 12px;
  background-position: calc(100% - 4px) calc(50% + 3px);
  background-repeat: no-repeat;
  background-color: var(--puck-color-white);
  cursor: pointer;
}

select.BlockStyleSelect-input:dir(rtl) {
  background-position: 12px calc(50% + 3px);
}

@media (hover: hover) and (pointer: fine) {
  .BlockStyleSelect:has(> input):hover .BlockStyleSelect-input:not([readonly]),
  .BlockStyleSelect:has(> textarea):hover
    .BlockStyleSelect-input:not([readonly]) {
    border-color: var(--puck-color-grey-05);
    transition: none;
  }
  .BlockStyleSelect:has(> select):hover
    .BlockStyleSelect-input:not([disabled]) {
    background-color: var(--puck-color-azure-12);
    background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='100' fill='%235a5a5a'><polygon points='0,0 100,0 50,50'/></svg>");
    border-color: var(--puck-color-grey-05);
    transition: none;
  }
}

.BlockStyleSelect-input:focus {
  border-color: var(--puck-color-grey-05);
  outline: 2px solid var(--puck-color-azure-05);
  transition: none;
}

.BlockStyleSelect--readOnly > .BlockStyleSelect-input,
.BlockStyleSelect--readOnly > select.BlockStyleSelect-input {
  background-color: var(--puck-color-grey-11);
  border-color: var(--puck-color-grey-09);
  color: var(--puck-color-grey-04);
  cursor: default;
  opacity: 1;
  outline: 0;
  transition: none;
}
